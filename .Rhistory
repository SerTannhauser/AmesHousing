Exter = bigdat %>%
select(bigdat,dplyr::contains("Ext"))
?contains
##Exterior Vars
Exter = bigdat %>%
select(bigdat,dplyr::contains("Ex"))
##Exterior Vars
Exter = bigdat %>%
select(bigdat,dplyr::contains(match = "Ex"))
##Exterior Vars
Exter = bigdat %>%
dplyr::select(bigdat,contains("Ex"))
##Exterior Vars
Exter = bigdat %>%
dplyr::select(.,contains("Ex"))
head(Exter)
##Exterior Vars
Exter = bigdat %>%
dplyr::select(.,contains("Exter"))
!complete.cases(Exter)
Exter[!complete.cases(Exter),]
##Look at Missing Values, then look at specifics
aggr(bigdat,plot = F)
Mas = bigdat %>%
dplyr::select(.,contains("Mas"))
Mas[!complete.cases(Mas,)]
Mas[!complete.cases(Mas),]
##Exterior Vars
Exter = bigdat %>%
dplyr::select(.,contains("Exter"))
Exter[!complete.cases(Exter),]
Mas = bigdat %>%
dplyr::select(.,contains("Mas"))
Mas[!complete.cases(Mas),]
bigdat = bigdat %>%
mutate(.,MasVnrArea = replace_na(0))
bigdat = bigdat %>%
mutate(.,MasVnrType = case_when(MasVnrArea == 0 ~ "None",True ~ as.character(MasVnrType)))
bigdat = bigdat %>%
mutate(.,MasVnrType = case_when(MasVnrArea == 0 ~ "None",TRUE ~ as.character(MasVnrType)))
Mas[!complete.cases(Mas),]
##Masonry Variables, Assuming any NA in area is Zero
Mas = bigdat %>%
dplyr::select(.,contains("Mas"))
Mas[!complete.cases(Mas),]
##Look at Missing Values, then look at specifics
aggr(bigdat,plot = F)
Bsmt = bigdat %>%
dplyr::select(.,contains("Bsmt"))
Bsmt[!complete.cases(Bsmt),]
bigdat = bigdat %>%
mutate(.,BsmtFinSF1 = replace_na(0),
BsmtFinSF2 = replace_na(0),
BsmtUnfSF = replace_na(0),
TotalBsmtSF = replace_na(0),
BsmtFullBath = replace_na(0),
BsmtHalfBath = replace_na(0))
##Look at Missing Values, then look at specifics
aggr(bigdat,plot = F)
Garage = bigdat %>%
dplyr::select(.,contains("Garage"))
Garage[!complete.cases(Garage)]
Garage[!complete.cases(Garage),]
bigdat = bigdat %>%
mutate(.,GarageYrBlt = replace_na(YearBuilt))
Garage[!complete.cases(Garage),]
Garage = bigdat %>%
dplyr::select(.,contains("Garage"))
Garage[!complete.cases(Garage),]
bigdat[2577,] = bigdat[2577,] %>%
mutate(.,GarageType = "None",GarageCars = 0, GarageArea = 0)
Garage = bigdat %>%
dplyr::select(.,contains("Garage"))
Garage[!complete.cases(Garage),]
Garage = bigdat %>%
dplyr::select(.,contains("Garage"))
Garage
##Look at Missing Values, then look at specifics
aggr(bigdat,plot = F)
impute = mice(bigdat)
head(bigdat)
(bigdat)
bigdat = as.data.frame(bigdat)
mice(bigdat)
string = "rRemodAdd+RoofStyle+RoofMatl+Exterior1st+Exterior2nd+MasVnrType+MasVnrArea+ExterQual+ExterCond+Foundation+BsmtQual+BsmtCond+BsmtExposure+BsmtFinType1+BsmtFinSF1+BsmtFinType2+BsmtFinSF2+BsmtUnf"
strng = "rRemodAdd+RoofStyle+RoofMatl+Exterior1st+Exterior2nd+MasVnrType+MasVnrArea+ExterQual+ExterCond+Foundation+BsmtQual+BsmtCond+BsmtExposure+BsmtFinType1+BsmtFinSF1+BsmtFinType2+BsmtFinSF2+BsmtUnf"
strng[449]
strng[448]
colnames(bigdat)
mice( bigdat)
mice(bigdat)
str(bigdat)
bigdat = data.frame(bigdat)
str(bigdat)
bigdat = data.frame(bigdat,stringsAsFactors = F)
str(bigdat)
##Look at Missing Values, then look at specifics
aggr(bigdat,plot = F)
bigdat = bigdat %>%
mutate_if(.,is.character,as.factor)
str(bigdat)
mice(bigdat)
mice::mice(bigdat)
mice(MaxNWts = 10000)
impute = mice(bigdat,MaxNWts = 10000)
impute = mice(bigdat,MaxNWts = 20000)
impute = mice(bigdat)
impute = mice(bigdat,MaxNWts = 3000)
impute = mice(bigdat,nnet.MaxNWts = 10000)
warnings()
impute
newbigdat = complete(impute)
View(newbigdat)
describe(newbigdat)
describe(outcome)
newnumerical = newbigdat[,sapply(newbigdat,is.integer)]
describe(newnumerical)
descrpt = describe(newnumerical)
descrpt %>%
filter(.,abs(skew) >=1)
descript$skew[abs(descript$skew)>=1]
descrpt$skew[abs(descrpt$skew)>=1]
descrpt[abs(descrpt$skew)>=1,]
rownames(descrpt)
rownames(descrpt[abs(descrpt$skew)>=1,])
row2log=rownames(descrpt[abs(descrpt$skew)>=1,])
length(row2log)
for(i in 1:length(row2log)){
descrpt[,row2log[i]] = log(descrpt[,row2log[i]] + 1)
}
descrpt[,row2log[1]]
descrpt[,as.character(row2log[1])]
newbigdat[,row2log[1]]
for(i in 1:length(row2log)){
newbigdat[,row2log[i]] = log(newbigdat[,row2log[i]] + 1)
}
describe(newbigdat)
newbigdat = complete(impute)
describe(newbigdat)
describe(outcome)
newnumerical = newbigdat[,sapply(newbigdat,is.integer)]
for(i in 1:length(row2log)){
newnumerical[,row2log[i]] = log(newnumerical[,row2log[i]] + 1)
}
describe(newbigdat)
describe(newnumerical)
colnames(newbigdat)
hist(newnumerical$PoolArea)
hist(numerical$PoolArea)
plot(numerical$PoolArea)
plot(log(numerical$PoolArea))
plot(log(numerical$PoolArea+1))
hist(log(numerical$PoolArea+1))
preproc = preProcess(newnumerical,c("center","scale"))
dfT = predict(preproc,newnumerical)
str(newbigdat)
newnumerical = newbigdat[,sapply(newbigdat,!is.factor)]
str(bigdat)
newnumerical = newbigdat[,sapply(newbigdat,!is.integer)]
newnumerical = newbigdat[,sapply(newbigdat,is.integer)]
newcategorical = newbigdat[,sapply(newbigdat,is.factor)]
newcatnames = colnames(newcategorical)
newnumerical = newbigdat[,-newcategorical]
newnumerical = newbigdat %>%
select(.,!one_of(newcatnames))
newnumerical = newbigdat %>%
dplyr::select(.,!one_of(newcatnames))
newnumerical = newbigdat %>%
dplyr::select(.,one_of(newcatnames))
newnumerical = newbigdat %>%
dplyr::select(.,!one_of(newcatnames))
newnumerical = newbigdat[,sapply(newbigdat,is.integer)]
newnumerical = newbigdat[,sapply(newbigdat,is.numeric)]
descrpt = describe(newnumerical)
descrpt
str(BsmtFinSF1)
str(newnemerical$BsmtFinSF1)
str(newnumerical$BsmtFinSF1)
table(newnumerical$BsmtFinSF1)
table(bigdat$BsmtFinSF1)
##Read in the Data
train = read_csv("rawData/train.csv")
test = read_csv("rawData/test.csv")
test$SalePrice = NA
train$Set = "train"
test$Set = "test"
bigdat = rbind(train,test)
table(bigdat$BsmtFinSF1)
str(bigdat$BsmtFinSF1)
##Read in the Data
train = read_csv("rawData/train.csv")
test = read_csv("rawData/test.csv")
test$SalePrice = NA
train$Set = "train"
test$Set = "test"
bigdat = rbind(train,test)
str(bigdat)
bigdat = bigdat[,-1]
column.names = colnames(bigdat)
bigdat = bigdat %>%
mutate(.,MSSubClass = as.character(MSSubClass))
categorical = bigdat[,sapply(bigdat,is.character)]
numerical = bigdat[,sapply(bigdat,is.integer)]
outcome = numerical$SalePrice
##Remove outcome from numerical
numerical = numerical %>%
dplyr::select(., -SalePrice)
##Check Missing Data in Categorical
aggr(categorical,plot = F)
##Replace NA's where appropriate
categorical = categorical %>%
mutate(.,Alley = replace_na(Alley,"None"))
categorical = categorical %>%
mutate(.,BsmtQual = replace_na(BsmtQual,"None"))
categorical = categorical %>%
mutate(.,BsmtCond = replace_na(BsmtCond,"None"))
categorical = categorical %>%
mutate(.,BsmtExposure = replace_na(BsmtExposure,"None"))
categorical = categorical %>%
mutate(.,BsmtFinType1 = replace_na(BsmtFinType1,"None"))
categorical = categorical %>%
mutate(.,BsmtFinType2 = replace_na(BsmtFinType2,"None"))
str(numerical$BsmtFinSF1)
newbigdat = complete(impute)
str(newbigdat$BsmtFinSF1)
library(tidyverse)
library(psych)
library(mice)
library(VIM)
##Read in the Data
train = read_csv("rawData/train.csv")
test = read_csv("rawData/test.csv")
test$SalePrice = NA
train$Set = "train"
test$Set = "test"
bigdat = rbind(train,test)
str(bigdat)
bigdat = bigdat[,-1]
column.names = colnames(bigdat)
bigdat = bigdat %>%
mutate(.,MSSubClass = as.character(MSSubClass))
categorical = bigdat[,sapply(bigdat,is.character)]
numerical = bigdat[,sapply(bigdat,is.integer)]
outcome = numerical$SalePrice
##Remove outcome from numerical
numerical = numerical %>%
dplyr::select(., -SalePrice)
##Check Missing Data in Categorical
aggr(categorical,plot = F)
##Replace NA's where appropriate
categorical = categorical %>%
mutate(.,Alley = replace_na(Alley,"None"))
categorical = categorical %>%
mutate(.,BsmtQual = replace_na(BsmtQual,"None"))
categorical = categorical %>%
mutate(.,BsmtCond = replace_na(BsmtCond,"None"))
categorical = categorical %>%
mutate(.,BsmtExposure = replace_na(BsmtExposure,"None"))
categorical = categorical %>%
mutate(.,BsmtFinType1 = replace_na(BsmtFinType1,"None"))
categorical = categorical %>%
mutate(.,BsmtFinType2 = replace_na(BsmtFinType2,"None"))
categorical = categorical %>%
mutate(.,FireplaceQu = replace_na(FireplaceQu,"None"))
categorical = categorical %>%
mutate(.,GarageType = replace_na(GarageType,"None"))
categorical = categorical %>%
mutate(.,GarageFinish = replace_na(GarageFinish,"None"))
categorical = categorical %>%
mutate(.,GarageQual = replace_na(GarageQual,"None"))
categorical = categorical %>%
mutate(.,GarageCond = replace_na(GarageCond,"None"))
categorical = categorical %>%
mutate(.,PoolQC = replace_na(PoolQC,"None"))
categorical = categorical %>%
mutate(.,Fence = replace_na(Fence,"None"))
categorical = categorical %>%
mutate(.,MiscFeature = replace_na(MiscFeature,"None"))
##Slap the three back together
bigdat = cbind(numerical,categorical)
bigdat = bigdat[,column.names[-80]]
bigdat$BsmtFinSF1
##Look at Missing Values, then look at specifics
aggr(bigdat,plot = F)
##Exterior Vars
Exter = bigdat %>%
dplyr::select(.,contains("Exter"))
Exter[!complete.cases(Exter),]
##Masonry Variables, Assuming any NA in area is Zero
Mas = bigdat %>%
dplyr::select(.,contains("Mas"))
Mas[!complete.cases(Mas),]
bigdat = bigdat %>%
mutate(.,MasVnrArea = replace_na(0))
##Masonry Variables, Assuming any NA in area is Zero
Mas = bigdat %>%
dplyr::select(.,contains("Mas"))
Mas[!complete.cases(Mas),]
bigdat = bigdat %>%
mutate(.,MasVnrArea = replace_na(0))
bigdat = bigdat %>%
mutate(.,MasVnrType = case_when(MasVnrArea == 0 ~ "None",TRUE ~ as.character(MasVnrType)))
##Masonry Variables, Assuming any NA in area is Zero
Mas = bigdat %>%
dplyr::select(.,contains("Mas"))
Mas[!complete.cases(Mas),]
Bsmt = bigdat %>%
dplyr::select(.,contains("Bsmt"))
Bsmt[!complete.cases(Bsmt),]
##Read in the Data
train = read_csv("rawData/train.csv")
test = read_csv("rawData/test.csv")
test$SalePrice = NA
train$Set = "train"
test$Set = "test"
bigdat = rbind(train,test)
str(bigdat)
bigdat = bigdat[,-1]
column.names = colnames(bigdat)
bigdat = bigdat %>%
mutate(.,MSSubClass = as.character(MSSubClass))
categorical = bigdat[,sapply(bigdat,is.character)]
numerical = bigdat[,sapply(bigdat,is.integer)]
outcome = numerical$SalePrice
##Remove outcome from numerical
numerical = numerical %>%
dplyr::select(., -SalePrice)
##Check Missing Data in Categorical
aggr(categorical,plot = F)
##Replace NA's where appropriate
categorical = categorical %>%
mutate(.,Alley = replace_na(Alley,"None"))
categorical = categorical %>%
mutate(.,BsmtQual = replace_na(BsmtQual,"None"))
categorical = categorical %>%
mutate(.,BsmtCond = replace_na(BsmtCond,"None"))
categorical = categorical %>%
mutate(.,BsmtExposure = replace_na(BsmtExposure,"None"))
categorical = categorical %>%
mutate(.,BsmtFinType1 = replace_na(BsmtFinType1,"None"))
categorical = categorical %>%
mutate(.,BsmtFinType2 = replace_na(BsmtFinType2,"None"))
categorical = categorical %>%
mutate(.,FireplaceQu = replace_na(FireplaceQu,"None"))
categorical = categorical %>%
mutate(.,GarageType = replace_na(GarageType,"None"))
categorical = categorical %>%
mutate(.,GarageFinish = replace_na(GarageFinish,"None"))
categorical = categorical %>%
mutate(.,GarageQual = replace_na(GarageQual,"None"))
categorical = categorical %>%
mutate(.,GarageCond = replace_na(GarageCond,"None"))
categorical = categorical %>%
mutate(.,PoolQC = replace_na(PoolQC,"None"))
categorical = categorical %>%
mutate(.,Fence = replace_na(Fence,"None"))
categorical = categorical %>%
mutate(.,MiscFeature = replace_na(MiscFeature,"None"))
##Slap the three back together
bigdat = cbind(numerical,categorical)
bigdat = bigdat[,column.names[-80]]
##Look at Missing Values, then look at specifics
aggr(bigdat,plot = F)
str(bigdat)
##Exterior Vars
Exter = bigdat %>%
dplyr::select(.,contains("Exter"))
Exter[!complete.cases(Exter),]
##Masonry Variables, Assuming any NA in area is Zero
Mas = bigdat %>%
dplyr::select(.,contains("Mas"))
Mas[!complete.cases(Mas),]
bigdat = bigdat %>%
mutate(.,MasVnrArea = replace_na(MasVnrArea,0))
Mas = bigdat %>%
dplyr::select(.,contains("Mas"))
Mas[!complete.cases(Mas),]
bigdat = bigdat %>%
mutate(.,MasVnrType = case_when(MasVnrArea == 0 ~ "None",TRUE ~ as.character(MasVnrType)))
Bsmt = bigdat %>%
dplyr::select(.,contains("Bsmt"))
Bsmt[!complete.cases(Bsmt),]
bigdat = bigdat %>%
mutate(.,BsmtFinSF1 = replace_na(BsmtFinSF1,0),
BsmtFinSF2 = replace_na(BsmtFinSF2,0),
BsmtUnfSF = replace_na(BsmtUnfSF,0),
TotalBsmtSF = replace_na(TotalBsmtSF,0),
BsmtFullBath = replace_na(BsmtFullBath,0),
BsmtHalfBath = replace_na(BsmtHalfBath,0))
Garage = bigdat %>%
dplyr::select(.,contains("Garage"))
Garage[!complete.cases(Garage),]
bigdat = bigdat %>%
mutate(.,GarageYrBlt = replace_na(YearBuilt))
Garage = bigdat %>%
dplyr::select(.,contains("Garage"))
Garage[!complete.cases(Garage),]
bigdat = bigdat %>%
mutate(.,GarageYrBlt = replace_na(YearBuilt))
bigdat[2577,] = bigdat[2577,] %>%
mutate(.,GarageType = "None",GarageCars = 0, GarageArea = 0)
bigdat$BsmtFinSF1
##MICE FTW
bigdat = bigdat %>%
mutate_if(.,is.character,as.factor)
impute = mice(bigdat,nnet.MaxNWts = 10000)
str(bigdat)
impute = mice(bigdat,nnet.MaxNWts = 10000)
##MICE FTW
bigdat = bigdat %>%
mutate_if(.,is.character,as.factor)
str(bigdat)
impute = mice(bigdat,nnet.MaxNWts = 10000)
impute = mice(bigdat,nnet.MaxNWts = 10000)
##MICE FTW
sqrt(2919)
pre.54nn = preProcess(bigdat, method = 'knnImpute', k=54)
imputed.54nn = predict(pre.54nn, bigdat)
library(RABB)
library(RANN)
install.packages("RANN")
library(RANN)
imputed.54nn = predict(pre.54nn, bigdat)
View(imputed.54nn)
newcategorical = imputed.54nn[,sapply(imputed.54nn,is.factor)]
newnumerical = imputed.54nn[,sapply(imputed.54nn,is.numeric)]
descrpt = describe(newnumerical)
descrpt
rownames(descrpt[abs(descrpt$skew)>=1,])
row2log=rownames(descrpt[abs(descrpt$skew)>=1,])
length(row2log)
for(i in 1:length(row2log)){
newnumerical[,row2log[i]] = log(newnumerical[,row2log[i]] + 1)
}
describe(newnumerical)
descrpt = describe(newnumerical)
newcategorical = imputed.54nn[,sapply(imputed.54nn,is.factor)]
newnumerical = imputed.54nn[,sapply(imputed.54nn,is.numeric)]
descrpt = describe(newnumerical)
for(i in 1:length(row2log)){
newnumerical[,row2log[i]] = log(newnumerical[,row2log[i]] + 1)
}
aggr(newnumerical,plot = F)
row2log=rownames(descrpt[abs(descrpt$skew)>=1,])
row2log
newcategorical = imputed.54nn[,sapply(imputed.54nn,is.factor)]
newnumerical = imputed.54nn[,sapply(imputed.54nn,is.numeric)]
descrpt = describe(newnumerical)
row2log=rownames(descrpt[abs(descrpt$skew)>=1,])
length(row2log)
for(i in 1:length(row2log)){
newnumerical[,row2log[i]] = log((newnumerical[,row2log[i]] + 1))
}
aggr(newnumerical,plot = F)
newcategorical = imputed.54nn[,sapply(imputed.54nn,is.factor)]
newnumerical = imputed.54nn[,sapply(imputed.54nn,is.numeric)]
descrpt = describe(newnumerical)
descrpt
describe(bigdat)
?kNN
imputed.54nn = kNN(bigdat,k = 54)
newcategorical = imputed.54nn[,sapply(imputed.54nn,is.factor)]
newnumerical = imputed.54nn[,sapply(imputed.54nn,is.numeric)]
descrpt = describe(newnumerical)
descrpt
row2log=rownames(descrpt[abs(descrpt$skew)>=1,])
length(row2log)
descrpt
row2log
for(i in 1:length(row2log)){
newnumerical[,row2log[i]] = log((newnumerical[,row2log[i]] + 1))
}
describe(newnumerical)
newcategorical = imputed.54nn[,sapply(imputed.54nn,is.factor)]
newnumerical = imputed.54nn[,sapply(imputed.54nn,is.numeric)]
descrpt = describe(newnumerical)
descrpt[abs(descrpt$skew)>=1,]
table(newnumerical$PoolArea)
table(newnumerical$MiscVal)
row2log=rownames(descrpt[abs(descrpt$skew)>=1,])
length(row2log)
for(i in 1:length(row2log)){
newnumerical[,row2log[i]] = log((newnumerical[,row2log[i]] + 1))
}
descrpt = describe(newnumerical)
descrpt
describe(outcome)
describe(log(outcome))
newcategorical = imputed.54nn[,sapply(imputed.54nn,is.factor)]
newnumerical = imputed.54nn[,sapply(imputed.54nn,is.numeric)]
descrpt = describe(newnumerical)
newcategorical = imputed.54nn[,sapply(imputed.54nn,is.factor)]
newnumerical = imputed.54nn[,sapply(imputed.54nn,is.numeric)]
descrpt = describe(newnumerical)
row2log=rownames(descrpt[abs(descrpt$skew)>=1,])
length(row2log)
for(i in 1:length(row2log)){
newnumerical[,row2log[i]] = log((newnumerical[,row2log[i]] + 1))
}
descrpt2 = describe(newnumerical)
descript
descrpt
skews = cbind(descrpt$skew,descrpt2$skew)
skews
rnames = rownames(descrpt)
skews = cbind(rnames,descrpt$skew,descrpt2$skew)
skews
skews = cbind(rnames,bees = descrpt$skew, boop descrpt2$skew)
skews = cbind(rnames,bees = descrpt$skew, boop = descrpt2$skew)
skews
describe(newcategorical)
descrpt
